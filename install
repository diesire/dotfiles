#!/usr/bin/env bash

set -e

# This script installs brew and many other utils using it
#
# Some parts are taken from:
# - https://github.com/holman/dotfiles
# - https://github.com/qchenevier/macbook_setup
#

# Install command-line tools using Homebrew.
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Check for Homebrew,
# Install if we don't have it
if test ! $(which brew); then
  echo "Installing homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Make sure weâ€™re using the latest Homebrew.
brew update

# Upgrade any already-installed formulae.
brew upgrade
brew upgrade --cask

brew tap homebrew/cask homebrew/cask-fonts homebrew/cask-versions

# Install more recent versions of some OS X tools.
brew install vim grep openssh screen git wget

# Extra command line tools
brew install hub exa z most

# Fonts
brew install --cask font-hack-nerd-font
brew install --cask font-iosevka font-iosevka-nerd-font
brew install --cask font-ubuntu font-ubuntumono-nerd-font

# zsh
if test ! $(which zsh); then
  brew install git zsh zsh-syntax-highlighting zsh-autosuggestions
  sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
  cp ./.zshrc $HOME/.zshrc
  # We installed the new shell, now we have to activate it
  echo "Adding the newly installed shell to the list of allowed shells"
  # Prompts for password
  bash -c 'echo /usr/local/bin/zsh >> /etc/shells'
  # Change to the new shell, prompts for password
  chsh -s /usr/local/bin/zsh
fi

# fuzzy search in terminal
brew install fzf
if test ! $(which fzf); then
  $(brew --prefix)/opt/fzf/install
fi

# Install developer friendly quick look plugins; see https://github.com/sindresorhus/quick-look-plugins
# To get plugins working in Catalina, you will need to remove the quarantine attribute.
# Run this to see the attributes:
# xattr -r ~/Library/QuickLook
# And run this to remove the attributes:
# xattr -d -r com.apple.quarantine ~/Library/QuickLook
brew install --cask --appdir="/Applications" qlcolorcode qlstephen qlmarkdown quicklook-json

# Dev tools
brew install node
brew install --cask anaconda

# Terminal
brew install --cask iterm2

# Editors
brew install --cask visual-studio-code-insiders

# Applications
# brew install --cask --appdir="/Applications" gimp
# brew install --cask --appdir="/Applications" xquartz inkscape
brew install --cask --appdir="/Applications" caffeine
